<Window x:Class="Liquinator.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Liquinator"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:attachedProperties="clr-namespace:Liquinator.AttachedProperties"
        xmlns:viewModels="clr-namespace:Liquinator.ViewModels"
        xmlns:views="clr-namespace:Liquinator.Views"
        mc:Ignorable="d"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal" 
        TextOptions.TextRenderingMode="Auto"        
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="FontFamily=pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto"
        Title="MainWindow" Height="500" Width="600">
    <Window.DataContext>
        <viewModels:MainWindowViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <DataTemplate x:Key="FlavourView" DataType="{x:Type viewModels:FlavourViewModel}">
            <views:FlavourView/>
        </DataTemplate>
    </Window.Resources>
    <materialDesign:DrawerHost IsLeftDrawerOpen="{Binding ElementName=MenuToggleButton, Path=IsChecked}">
        <materialDesign:DrawerHost.LeftDrawerContent>
            <DockPanel>
                <ToggleButton Style="{DynamicResource MaterialDesignHamburgerToggleButton}"
                              DockPanel.Dock="Top"
                              HorizontalAlignment="Right"
                              IsChecked="{Binding ElementName=MenuToggleButton, Path=IsChecked}"/>
                <!--Menu in left drawer-->
                <ListBox Width="100" x:Name="MenuItems" Margin="0 16 0 16" SelectedIndex="0">
                    <ListBoxItem attachedProperties:LeftButtonUp.Command="{Binding ChangeViewCommand}"
                                 attachedProperties:LeftButtonUp.CommandParameter="FlavourView" Content="Flavour"/>
                    <ListBoxItem attachedProperties:LeftButtonUp.Command="{Binding ChangeViewCommand}"
                                 attachedProperties:LeftButtonUp.CommandParameter="RecipeView" Content="Recipe"/>
                    <ListBoxItem>3</ListBoxItem>
                    <ListBoxItem>4</ListBoxItem>
                    <ListBoxItem>5</ListBoxItem>
                </ListBox>
            </DockPanel>
        </materialDesign:DrawerHost.LeftDrawerContent>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!--Header-->
            <materialDesign:ColorZone Mode="PrimaryDark" Width="Auto" Height="50" Padding="5" CornerRadius="3" materialDesign:ShadowAssist.ShadowDepth="Depth3">
                <StackPanel Orientation="Horizontal">
                    <ToggleButton x:Name="MenuToggleButton" Width="30" Style="{DynamicResource MaterialDesignHamburgerToggleButton}"></ToggleButton>
                    <TextBlock VerticalAlignment="Center" Margin="16 0 0 0">Recipe Manager</TextBlock>
                </StackPanel>
            </materialDesign:ColorZone>
            <Grid Row="1" Margin="8">
                <ContentControl Content="{Binding SwitchViewModel }">
                    <ContentControl.Style>
                        <Style TargetType="{x:Type ContentControl}">
                            <Setter Property="ContentTemplate" Value="{StaticResource FlavourView}"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SwitchViewModel}" Value="FlavourView">
                                    <Setter Property="ContentTemplate" Value="{StaticResource FlavourView}"/>
                                </DataTrigger>
                                <!--<DataTrigger Binding="{Binding SwitchViewModel}" Value="RecipeView">
                                    <Setter Property="ContentTemplate" Value="{StaticResource RecipeView}"/>
                                </DataTrigger>-->
                            </Style.Triggers>
                        </Style>
                    </ContentControl.Style>
                </ContentControl>
            </Grid>
        </Grid>
    </materialDesign:DrawerHost>
</Window>
